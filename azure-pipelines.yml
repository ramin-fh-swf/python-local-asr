# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  VENV_DIR: '.venv_linux'

steps:
# Set up the repository to use LFS (Large File Storage)
- checkout: self
  lfs: true

# Install ffmpeg for torchaudio MP3 support
- script: |
    sudo apt update
    sudo apt install -y ffmpeg
  displayName: 'Install ffmpeg for torchaudio MP3 support'

# Set up Python version
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.12'

# Set up Python & virtual environment
- script: |
    python3 -m venv $(VENV_DIR)
    source $(VENV_DIR)/bin/activate
    pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install python dependencies'

# Pytest ausf√ºhren + Coverage erzeugen
- script: |
    source $(VENV_DIR)/bin/activate
    python3 -m pytest
  displayName: 'Run tests with pytest'
